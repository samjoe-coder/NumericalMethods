#///This program implements NEWTON FORWARD FORMULA to
# find the value of interpolated arg///

#////NOTE: This program only works for 4 values of x and 4 values of y////

#this function calculates tCn value 
def tcnCal(t, n):
 
    temp = t;
    for k in range(1, n):
        temp = temp*(t - k);
    temp=temp/fact(n)
    return temp;
 
#this function calculates factorial of n
def fact(n):
    f = 1;
    for l in range(2,n + 1):
        f*=l;
    return f;
#rhis function calculates size of list 
def size(n):
    s=n-1
    for m in range(1,n-1):
        s=s+m
    return s

def cFun(n):
    v=n
    inc = 0
    for c in range(0,size(v),v-1):
        if(c==0 or c==4 or c==7 or c==9):
            inc = c
            break;
    return inc;    
    

n = int(input("Enter number of x and y values(works only for 4): "))
#d=size(n)
#print(d)
print(f"Enter {n} x values")
x = []
for i in range(0, n):
    i = float(input())
    x.append(i) 
#print(x)

print(f"Enter {n} y values")
y = []
for j in range(0, n):
    j = float(input())
    y.append(round(j,4)) 
#print(y)
inpolAug = float(input("Enter interpolated argument(value of x, of which we need to find corresponding y value): "))

#this program only works for 4 values of x & 4 values of y
for a in range(0,size(n)+2):
    if(a%(n-1)==0 and a!=0):
        continue
    ele=y[a+1]-y[a]
    y.append(round(ele,4))

#print(y)    
    
t=(inpolAug-x[0])/(x[1]-x[0])

sum=0
sum=(tcnCal(t,1)*y[4])+(tcnCal(t,2)*y[7])+(tcnCal(t,3)*y[9])

sum+=y[0]
print("Answer: ",round(sum,4))

#for f in range(1,n):
 #   print(tcnCal(t,f))



